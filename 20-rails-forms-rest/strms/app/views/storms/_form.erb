whatever is here

<%= form_for(@storm) do |f| %>
  <%= f.text_field :name %>
  <%= f.text_field :flavor %>
  <%= f.number_field :victims %>
  <%= f.collection_select(:city_id, City.all, :id, :name) %>
  <%= f.submit %>
<% end %>

<pre>
  1. it can be used generically for making any dropdown
collection_select(
    :post, # field namespace => nested hash that you want, only if you use it by itself
    :author_id, # field name
    # result of these two params will be: <select name="post[author_id]">...

    # then you should specify some collection or array of rows.
    # It can be Author.where(..).order(..) or something like that.
    # In your example it is:
    Author.all,

    # then you should specify methods for generating options
    :id, # this is name of method that will be called for every row, result will be set as key
    :name_with_initial, # this is name of method that will be called for every row, result will be set as value

    # as a result, every option will be generated by the following rule:
    # <option value=#{author.id}>#{author.name_with_initial}</option>
    # 'author' is an element in the collection or array

    :prompt => true # then you can specify some params. You can find them in the docs.
)
</pre>

<%= form_for :storm, url: storms_path do |f| %>
  <%= f.text_field :name %>
  <%= f.text_field :flavor %>
  <%= f.number_field :victims %>
  <%= f.submit %>
<% end %>
